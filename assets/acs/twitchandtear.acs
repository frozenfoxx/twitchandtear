#library "twitchandtear"
#include "zcommon.acs"

// The opening text for players
script "TwitchAndTear Welcome" OPEN net
{
  PrintBold(s:"TwitchAndTear loaded");
  Log(s:"TwitchAndTear loaded");
}

// Entrance announcement
script "TwitchAndTear EnteredGame" ENTER net
{
  Log(n:0, s:" has entered the game.");
}

// Death announcment
script "TwitchAndTear PlayerDied" DEATH net
{
  Log(n:0, s:" has died.");
}

// End of level stats
script "TwitchAndTear LevelStats" UNLOADING net
{
  int timetaken;
    timetaken = Timer() / 35;
  int killedmonsters;
    killedmonsters = GetLevelInfo (LEVELINFO_KILLED_MONSTERS);
  int numsecrets;
    numsecrets = GetLevelInfo (LEVELINFO_FOUND_SECRETS);
  Log(s:"Level stat: time ", d:timetaken);
  Log(s:"Level stat: kills ", d:killedmonsters);
  Log(s:"Level stat: secrets ", d:numsecrets);
  Log(s:"Level stat: end");
}

// This script allows spawning of enemies in a level
// MonstType: the monster to spawn
script "TwitchAndTear SpawnEnemy" (int MonstType) net
{
  // Attempt a spawn, but if it fails from collision try to do so again
  do {
    delay(1);
    int x = GetActorX(0) + 50.0;
    int y = GetActorY(0) + 50.0;
    int z = GetActorZ(0);
    int angle = GetActorAngle(0) >> 8;

  } until (Spawn(MonstType, x, y, z, 0, angle));
}

// This script allows spawning of followers in a level
// FollowerName: the name of the follower to spawn
script "TwitchAndTear SpawnFollower" () net
{
  str class = "Follower";

  // Attempt a spawn, but if it fails from collision try to do so again
  do {
    delay(1);
    int x = GetActorX(0) - 50.0;
    int y = GetActorY(0) - 50.0;
    int z = GetActorZ(0);
    int angle = GetActorAngle(0) >> 8;

  } until (Spawn(class, x, y, z, 0, angle));
}

// This script allows spawning of PowerUps at given spawners in a level
// PowerUpType: the item to spawn
script "TwitchAndTear SpawnPowerUp" (int PowerUpType) net
{
  // Attempt a spawn, but if it fails from collision try to do so again
  do {
    delay(1);
    int x = GetActorX(0) + random(-64.0, 64.0);
    int y = GetActorY(0) + random(-64.0, 64.0);
    int z = GetActorCeilingZ(0) - 8.0;
  } until (Spawn(PowerUpType, x, y, z));
}

// This announces when a Secret is found
script "TwitchAndTear CheckSecrets" OPEN
{
  int oldsecretcount;
  int newsecretcount;

  oldsecretcount = GetLevelInfo(LEVELINFO_FOUND_SECRETS);

  while (newsecretcount <= oldsecretcount)
  {
    delay(4);
    newsecretcount = GetLevelInfo(LEVELINFO_FOUND_SECRETS);
  }

  PrintBold(s:"Secret found!");
  Log(s:"Secret found!");

  restart;
}
